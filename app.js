// Generated by CoffeeScript 1.9.2
(function() {
  angular.module('metaEditor', ['ngResource', 'ngMessages', 'ngRoute', 'mgcrea.ngStrap', 'ui.bootstrap']).config([
    '$locationProvider', '$routeProvider', function($locationProvider, $routeProvider) {
      return $routeProvider.when('/', {
        redirectTo: '/sc'
      }).when('/:court', {
        templateUrl: 'views/legal-heads.html',
        controller: 'LegalHeadsCtrl'
      }).when('/:court/:legal_head', {
        templateUrl: 'views/subject-matters.html',
        controller: 'LegalHeadCtrl'
      }).when('/:court/:legal_head/:subject', {
        templateUrl: 'views/issues.html',
        controller: 'IssuesCtrl'
      }).otherwise({
        redirectTo: '/sc'
      });
    }
  ]).constant("CONF", {
    countHeader: "ME-Count",
    pageHeader: "ME-Page"
  });

  String.prototype.hexEncode = function() {
    var hex, i, k, ref, result;
    result = "";
    for (i = k = 0, ref = this.length - 1; 0 <= ref ? k <= ref : k >= ref; i = 0 <= ref ? ++k : --k) {
      hex = this.charCodeAt(i).toString(16);
      result += ("000" + hex).slice(-4);
    }
    return result;
  };

  String.prototype.hexDecode = function() {
    var back, hexes, j, k, ref;
    hexes = this.match(/.{1,4}/g) || [];
    back = "";
    for (j = k = 0, ref = hexes.length - 1; 0 <= ref ? k <= ref : k >= ref; j = 0 <= ref ? ++k : --k) {
      back += String.fromCharCode(parseInt(hexes[j], 16));
    }
    return back;
  };

}).call(this);
